// [TODO: this function generates all triangles with diagonalUp]
/*void RangeTerrain::GenerateVertexData() {
    float h1, h2, h3, h4;
    glm::vec3 *n1, *n2, *n3, *n4;
    int idx = 0;
    for (int y=0; y<Y_INTERVAL-1; y++) {
        for (int x=0; x<X_INTERVAL-1; x++) {
            v1 = hmap[y-1][x-1];
            v2 = hmap[y][x-1];
            v3 = hmap[y-1][x];
            v4 = hmap[y][x];
            
            n1 = &normals[y-1][x-1];
            n2 = &normals[y][x-1];
            n3 = &normals[y-1][x];
            n4 = &normals[y][x];
            
            SetVertexData(idx, , <#const vec2 &t#>, <#const vec3 &n#>)
            vdata[v++] = (x-1) * GRID_RES;
            vdata[v++] = h1;
            vdata[v++] = (y-1) * GRID_RES;
            
            vdata[v++] = 0;
            vdata[v++] = 0;
            
            vdata[v++] = n1->x;
            vdata[v++] = n1->y;
            vdata[v++] = n1->z;
            
            
            
            vdata[v++] = (x-1) * GRID_RES;
            vdata[v++] = h2;
            vdata[v++] = y * GRID_RES;
            
            vdata[v++] = 0;
            vdata[v++] = 1;
            
            vdata[v++] = n2->x;
            vdata[v++] = n2->y;
            vdata[v++] = n2->z;
            
            
            
            vdata[v++] = x * GRID_RES;
            vdata[v++] = h3;
            vdata[v++] = (y-1) * GRID_RES;
            
            vdata[v++] = 1;
            vdata[v++] = 0;
            
            vdata[v++] = n3->x;
            vdata[v++] = n3->y;
            vdata[v++] = n3->z;
            
            
            
            vdata[v++] = x * GRID_RES;
            vdata[v++] = h4;
            vdata[v++] = y * GRID_RES;
            
            vdata[v++] = 1;
            vdata[v++] = 1;
            
            vdata[v++] = n4->x;
            vdata[v++] = n4->y;
            vdata[v++] = n4->z;
            
            
            
            vdata[v++] = x * GRID_RES;
            vdata[v++] = h3;
            vdata[v++] = (y-1) * GRID_RES;
            
            vdata[v++] = 1;
            vdata[v++] = 0;
            
            vdata[v++] = n3->x;
            vdata[v++] = n3->y;
            vdata[v++] = n3->z;
            
            
            
            vdata[v++] = (x-1) * GRID_RES;;
            vdata[v++] = h2;
            vdata[v++] = y * GRID_RES;
            
            vdata[v++] = 0;
            vdata[v++] = 1;
            
            vdata[v++] = n2->x;
            vdata[v++] = n2->y;
            vdata[v++] = n2->z;
        }
    }
}*/